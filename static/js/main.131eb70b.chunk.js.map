{"version":3,"sources":["components/Header.tsx","data/declare.ts","components/hooks/useGridDataManager.ts","components/TaskList.tsx","components/TaskDependencies.tsx","components/hooks/useDescriptions.ts","components/Tasks.tsx","data/cooks/declare.ts","data/tasks/async-paramdigms.ts","data/tasks/bill-types.ts","data/tasks/customized-forms.ts","data/tasks/eca-rules.ts","data/tasks/forms.ts","data/tasks/micro-apps.ts","data/tasks/micro-bffs.ts","data/tasks/query-solutions.ts","data/tasks/refers.ts","data/tasks/web-unpacks.ts","data/tasks/trek-unpacks.ts","data/categories.ts","data/cooks/mister-force-relation.ts","data/cooks/mister-sankey.ts","data/cooks/index.ts","data/index.ts","components/hooks/useChartOptions.ts","components/GraphChart.tsx","components/SankeyChart.tsx","components/Charts.tsx","App.tsx","index.tsx"],"names":["Header","props","onTaskChanged","onDependenciesChanged","tasks","dependencies","clearHandler","exportHandler","data","blob","Blob","JSON","stringify","undefined","type","saveAs","importHandler","file","Promise","resolve","reader","FileReader","readAsText","onload","result","parse","toString","useImport","className","icon","DeleteTwoTone","shape","onClick","DownloadOutlined","beforeUpload","showUploadList","UploadOutlined","TaskCategoryEnum","TaskDependentTypeEnum","useGridDataManager","useState","gridApi","setGridApi","getRowData","rowData","forEachNode","node","push","onGridReady","params","api","onRowDataUpdated","onDataChanged","console","log","onCellValueChanged","create","applyTransaction","add","id","Date","now","ensureIndexVisible","length","remove","selectedData","getSelectedRows","TaskList","React","memo","FileAddTwoTone","getRowNodeId","rowSelection","suppressScrollOnNewData","field","headerName","width","resizable","cellRendererFramework","checked","value","onChange","ev","setValue","target","editable","cellEditor","cellEditorParams","values","Object","flex","minWidth","TaskDependencies","taskSelectValues","map","task","relationValues","valueGetter","descriptions","join","valueSetter","newValue","split","src","MrCookEnum","Tasks","TechnicalSupport","Refactory","Goal","Dependent","Solution","Task","Related","Action","categories","name","symbolSize","itemStyle","symbol","putIntoData","packages","forEach","category","nodes","deps","getEdgeSymbol","links","source","key","description","cookForECharts","categoryMap","reduce","arr","makeCategoryMap","styles","getEmptyData","MrForceRelation","pack","MrSankey","cook","ForceRelation","Sankey","cookData","useChartOptions","sankey","tooltip","legend","orient","x","y","top","a","animation","animationDuration","animationEasingUpdate","series","emphasis","focus","label","position","show","normal","formatter","lineStyle","color","curveness","useSankeyOptions","forceRelation","layout","force","repulsion","gravity","layoutAnimation","edgeLength","roam","focusNodeAdjacency","useForceRelationOptions","GraphChart","options","option","SankeyChart","Charts","forceRenderTabPanel","useStatement","useTasks","tasksInChart","filter","i","displayInCharts","dependenciesInChart","actions","App","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.131eb70b.chunk.js","sourcesContent":["import React from \"react\";\nimport {Button, Upload} from \"antd\";\nimport { DownloadOutlined, UploadOutlined, DeleteTwoTone } from '@ant-design/icons';\nimport {saveAs} from \"file-saver\";\n\nimport {ITask, ITaskDependencies, ITaskPackages} from \"../data/declare\";\n\n\nexport type HeaderProps = {\n  tasks: Array<ITask>,\n  dependencies: Array<ITaskDependencies>,\n  onTaskChanged: (tasks: Array<ITask>) => void,\n  onDependenciesChanged: (dependencies: Array<ITaskDependencies>) => void\n}\n\nexport const Header: React.FunctionComponent<HeaderProps> = props => {\n\n  const clearHandler = useClear(props.onTaskChanged, props.onDependenciesChanged);\n  const exportHandler = useExport(props.tasks, props.dependencies);\n  const importHandler = useImport(props.onTaskChanged, props.onDependenciesChanged);\n\n  return (\n    <>\n      <div className={\"header-container\"}>\n        <div className={\"header-left\"}>\n          <h3>企企四季度目标依赖关系</h3>\n        </div>\n        <div className={\"header-right\"}>\n          <Button icon={<DeleteTwoTone />} shape={'circle'} onClick={() => clearHandler()} />\n          <Button type=\"primary\" icon={<DownloadOutlined />} shape={'circle'} onClick={() => exportHandler()} />\n          { /** @ts-ignore */}\n          <Upload beforeUpload={importHandler} showUploadList={false}>\n            <Button type=\"primary\" icon={<UploadOutlined />} shape={'circle'} />\n          </Upload>\n        </div>\n      </div>\n\n\n    </>\n\n  );\n}\n\nfunction useClear(onTaskChanged: (tasks: Array<ITask>) => void, onDependenciesChanged: (dependencies: Array<ITaskDependencies>) => void) {\n  return () => {\n    onTaskChanged([]);\n    onDependenciesChanged([]);\n  }\n}\n\nfunction useExport(tasks: Array<ITask>, dependencies: Array<ITaskDependencies>) {\n  return () => {\n    const data = {tasks, dependencies};\n    const blob = new Blob([JSON.stringify(data, undefined, 2)], {type: \"text/json;charset=utf-8\"});\n    saveAs(blob, 'data.json');\n  }\n}\n\nfunction useImport(onTaskChanged: (tasks: Array<ITask>) => void, onDependenciesChanged: (dependencies: Array<ITaskDependencies>) => void) {\n  return (file: any) => {\n    return new Promise(resolve => {\n      const reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = () => {\n        if (reader.result) {\n          const data: ITaskPackages = JSON.parse(reader.result.toString());\n          onTaskChanged(data.tasks);\n          onDependenciesChanged(data.dependencies);\n        }\n      };\n\n      resolve(undefined)\n    });\n  }\n}","export enum TaskCategoryEnum {\n  Goal = '目标',\n  Solution = '方案',\n  TechnicalSupport = '技术支撑',\n  Refactory = '重构',\n  Action = '动作',\n  Task = \"任务项\"\n}\n\nexport enum TaskDependentTypeEnum {\n  Dependent = \"Dependent\",\n  Related = \"Related\"\n}\n\nexport type ITask = {\n  id: string,\n  name: string,\n  category: TaskCategoryEnum,\n  descriptions?: Array<string>,\n  displayInCharts?: boolean\n}\n\nexport type ITaskDependencies = {\n  src: string,\n  target: string,\n  type: TaskDependentTypeEnum,\n  descriptions?: Array<string>,\n  displayInCharts?: boolean\n}\n\nexport type ITaskPackages = {\n  tasks: Array<ITask>,\n  dependencies: Array<ITaskDependencies>\n}\n\nexport type IEchartsGraphData = {\n  nodes: Array<any>;\n  links: Array<any>;\n  categories: Array<any>;\n  description: Record<string, string>;\n};","import {useState} from \"react\";\nimport {GridApi, GridReadyEvent, RowDataUpdatedEvent} from \"ag-grid-community\";\nimport {ITask} from \"../../data/declare\";\n\n\nexport type GridDataManagerParams<T = any> = {\n  data: Array<T>;\n  onDataChanged: (data: Array<T>) => void;\n}\n\nexport interface IGridDataManager {\n  data: Array<any>,\n\n  onGridReady(params: GridReadyEvent): void,\n\n  onRowDataUpdated(params: RowDataUpdatedEvent): void,\n\n  onCellValueChanged(): void,\n\n  create(): void,\n\n  remove(): void,\n}\n\nexport function useGridDataManager(props: GridDataManagerParams): IGridDataManager {\n\n  const [gridApi, setGridApi] = useState<GridApi>();\n\n  const create = () => {\n    const rs = gridApi?.applyTransaction({\n      add: [{id: Date.now()}]\n    });\n\n    gridApi?.ensureIndexVisible(props.data.length);\n  }\n\n  const remove = () => {\n    const selectedData = gridApi?.getSelectedRows();\n    console.log('selectedData', selectedData);\n    if (selectedData?.length) {\n      const res = gridApi?.applyTransaction({remove: selectedData});\n    }\n  }\n\n\n  const getRowData = () => {\n    const rowData: Array<ITask> = [];\n    gridApi?.forEachNode(function (node) {\n      rowData.push(node.data);\n    });\n    return rowData;\n  }\n\n  const onGridReady = (params: GridReadyEvent) => {\n    setGridApi(params.api);\n  };\n\n  const onRowDataUpdated = (params: RowDataUpdatedEvent) => {\n    const rowData = getRowData();\n    props.onDataChanged(rowData);\n    console.log('row data changed', rowData);\n  };\n\n  const onCellValueChanged = () => {\n    const rowData = getRowData();\n    console.log('rowData is', rowData);\n    props.onDataChanged(rowData);\n  }\n\n\n  return {\n    data: props.data,\n    onGridReady,\n    onRowDataUpdated,\n    onCellValueChanged,\n    create,\n    remove\n  }\n}","import React, {useCallback, useMemo, useState} from \"react\";\nimport {AgGridReact, AgGridColumn} from \"ag-grid-react\";\nimport {ICellRendererParams} from \"ag-grid-community\";\nimport {Button} from 'antd';\nimport {FileAddTwoTone, DeleteTwoTone} from '@ant-design/icons';\n\nimport {ITask, TaskCategoryEnum} from \"../data/declare\";\nimport {useGridDataManager} from \"./hooks/useGridDataManager\";\n\n\nexport type TaskListProps = {\n  data: Array<ITask>;\n  onDataChanged: (data: Array<ITask>) => void;\n};\n\nexport const TaskList: React.FunctionComponent<TaskListProps> = React.memo((props) => {\n  const {data, onGridReady, onRowDataUpdated, onCellValueChanged, create, remove} = useGridDataManager(props);\n\n  return (\n    <div className=\"task-list\">\n      <div className={\"grid-header\"}>\n        <Button type=\"primary\" icon={<FileAddTwoTone/>} shape={'circle'} onClick={() => create()}/>\n        <Button type=\"default\" icon={<DeleteTwoTone/>} shape={'round'} onClick={() => remove()}>选中</Button>\n      </div>\n      <AgGridReact\n        className={\"grid\"}\n        getRowNodeId={data => data.id}\n        // singleClickEdit={true}\n        rowData={data}\n        rowSelection={'single'}\n        suppressScrollOnNewData={true}\n        onGridReady={onGridReady}\n        onRowDataUpdated={onRowDataUpdated}\n        onCellValueChanged={onCellValueChanged}\n      >\n        <AgGridColumn\n          field=\"displayInCharts\"\n          headerName=\"显示\"\n          width={50}\n          resizable={true}\n          cellRendererFramework={(params: ICellRendererParams) => {\n            return <input type={'checkbox'} checked={params.value} onChange={ev => {\n              // @ts-ignore\n              params.setValue(ev.target.checked);\n            }}/>\n\n          }}\n        />\n        <AgGridColumn\n          field=\"id\"\n          headerName=\"ID\"\n          width={200}\n          editable={true}\n          resizable={true}\n          cellEditor=\"agTextCellEditor\"\n        />\n        <AgGridColumn\n          field=\"name\"\n          headerName=\"任务名称\"\n          width={200}\n          editable={true}\n          resizable={true}\n          cellEditor=\"agTextCellEditor\"\n          // filter={'agSetColumnFilter'}\n          // filterParams={{applyMiniFilterWhileTyping: true,}}\n          // floatingFilter={true}\n        />\n        <AgGridColumn\n          field=\"category\"\n          headerName=\"类型\"\n          width={100}\n          editable={true}\n          resizable={true}\n          cellEditor=\"agPopupSelectCellEditor\"\n          cellEditorParams={{values: Object.values(TaskCategoryEnum)}}\n        />\n        <AgGridColumn\n          field=\"descriptions\"\n          headerName=\"描述\"\n          flex={1}\n          width={200}\n          minWidth={200}\n          editable={true}\n          resizable={true}\n          cellEditor=\"agLargeTextCellEditor\"\n        />\n      </AgGridReact>\n    </div>\n  )\n});\n","import React from \"react\";\nimport {AgGridReact, AgGridColumn} from \"ag-grid-react\";\nimport {Button} from 'antd';\nimport { FileAddTwoTone, DeleteTwoTone } from '@ant-design/icons';\n\nimport {ITask, ITaskDependencies, TaskDependentTypeEnum} from \"../data/declare\";\nimport {useGridDataManager} from \"./hooks/useGridDataManager\";\nimport {useDescriptions} from \"./hooks/useDescriptions\";\nimport {ICellRendererParams} from \"ag-grid-community\";\n\nexport type TaskDependenciesProps = {\n  tasks: Array<ITask>,\n  data: Array<ITaskDependencies>;\n  onTaskChanged: (data: Array<ITask>) => void;\n  onDataChanged: (data: Array<ITaskDependencies>) => void;\n};\n\nexport const TaskDependencies: React.FunctionComponent<TaskDependenciesProps> = (props) => {\n  const {data, onGridReady, onRowDataUpdated, onCellValueChanged, create, remove} = useGridDataManager(props);\n  const taskSelectValues = useTaskSelectValues(props.tasks);\n  const relationValues = useRelationValues();\n  const { valueGetter, valueSetter } = useDescriptions();\n\n  return (\n    <div className=\"task-dependencies\">\n      <div className={\"grid-header\"}>\n        <Button type=\"primary\" icon={<FileAddTwoTone />} shape={'circle'} onClick={() => create()} />\n        <Button type=\"default\" icon={<DeleteTwoTone />} shape={'round'} onClick={() => remove()}>选中</Button>\n      </div>\n      <AgGridReact\n        className={\"grid\"}\n        getRowNodeId={data => `${data.src}_${data.target}`}\n        // singleClickEdit={true}\n        rowData={data}\n        rowSelection={'single'}\n        suppressScrollOnNewData={true}\n        onGridReady={onGridReady}\n        onRowDataUpdated={onRowDataUpdated}\n        onCellValueChanged={onCellValueChanged}\n      >\n        <AgGridColumn\n          field=\"displayInCharts\"\n          headerName=\"显示\"\n          width={50}\n          resizable={true}\n          cellRendererFramework={(params: ICellRendererParams) => {\n            return <input type={'checkbox'} checked={params.value} onChange={ev => {\n              // @ts-ignore\n              params.setValue(ev.target.checked);\n            }} />\n          }}\n        />\n        <AgGridColumn\n          field=\"src\"\n          headerName=\"源任务ID\"\n          width={200}\n          editable={true}\n          cellEditor=\"agPopupSelectCellEditor\"\n          cellEditorParams={{values: taskSelectValues}}\n        />\n        <AgGridColumn\n          field=\"target\"\n          headerName=\"目标任务ID\"\n          width={200}\n          editable={true}\n          cellEditor=\"agPopupSelectCellEditor\"\n          cellEditorParams={{values: taskSelectValues}}\n        />\n        <AgGridColumn\n          field=\"type\"\n          headerName=\"关系\"\n          width={150}\n          editable={true}\n          cellEditor=\"agPopupSelectCellEditor\"\n          cellEditorParams={{values: relationValues}}\n        />\n        <AgGridColumn\n          field=\"descriptions\"\n          headerName=\"描述\"\n          flex={1}\n          width={200}\n          minWidth={200}\n          editable={true}\n          cellEditor=\"agLargeTextCellEditor\"\n          valueGetter={valueGetter}\n          valueSetter={valueSetter}\n        />\n      </AgGridReact>\n    </div>\n  );\n};\n\n\nfunction useTaskSelectValues(tasks: Array<ITask>) {\n  return tasks.map(task => task.id);\n}\n\nfunction useRelationValues() {\n  return Object.values(TaskDependentTypeEnum);\n}","import {ValueGetterParams, ValueSetterParams} from \"ag-grid-community\";\n\nexport function useDescriptions() {\n  const valueGetter = (params: ValueGetterParams) => {\n    if(!params.data.descriptions) {\n      return undefined;\n    }\n\n    return params.data.descriptions.join('\\n');\n  }\n\n  const valueSetter = (params: ValueSetterParams) => {\n    params.data.descriptions = params.newValue.split('\\n');\n    return true;\n  }\n\n  return {\n    valueGetter, valueSetter\n  }\n}","import React, {useState} from \"react\";\n\nimport {ITask, ITaskDependencies} from \"../data/declare\";\n\nimport {TaskList} from \"./TaskList\";\nimport {TaskDependencies} from \"./TaskDependencies\";\n\nexport type TasksProps = {\n  tasks: Array<ITask>,\n  dependencies: Array<ITaskDependencies>,\n  onTaskChanged: (tasks: Array<ITask>) => void,\n  onDependenciesChanged: (dependencies: Array<ITaskDependencies>) => void\n}\n\nexport const Tasks: React.FunctionComponent<TasksProps> = (props) => {\n  return (\n    <div className=\"tasks ag-theme-alpine\">\n      <TaskList data={props.tasks} onDataChanged={props.onTaskChanged}/>\n      <TaskDependencies tasks={props.tasks} data={props.dependencies} onTaskChanged={props.onTaskChanged} onDataChanged={props.onDependenciesChanged}/>\n    </div>\n  );\n};\n","export enum MrCookEnum {\n  ForceRelation = 'ForceRelation',\n  Sankey = 'Sankey'\n}","import { ITask, TaskCategoryEnum, ITaskDependencies, ITaskPackages } from '../declare';\n\nconst tasks: Array<ITask> = [\n  {\n    id: \"AsyncParadigms\",\n    name: \"异步数据执行方案编排\",\n    category: TaskCategoryEnum.TechnicalSupport,\n    descriptions: [],\n  }\n]\n\nconst dependencies: Array<ITaskDependencies> = [\n  \n]\n\nexport const asyncParadigms: ITaskPackages = {\n  tasks, dependencies\n}","import { ITask, TaskCategoryEnum, ITaskDependencies, ITaskPackages } from '../declare';\n\nconst tasks: Array<ITask> = [\n  {\n    id: \"BillTypeRefactory\",\n    name: \"单据类型重构\",\n    category: TaskCategoryEnum.Refactory,\n    descriptions: [],\n  }\n]\n\nconst dependencies: Array<ITaskDependencies> = [\n  \n]\n\nexport const billTypes: ITaskPackages = {\n  tasks, dependencies\n}","import { ITask, TaskCategoryEnum, ITaskDependencies, ITaskPackages, TaskDependentTypeEnum } from '../declare';\n\nconst tasks: Array<ITask> = [\n  {\n    id: \"CustomizedForm\",\n    name: \"自定义表单\",\n    category: TaskCategoryEnum.Goal,\n    descriptions: [],\n  }\n\n]\n\nconst dependencies: Array<ITaskDependencies> = [\n  {\n    src: \"CustomizedForm\", \n    target: \"FormEngineRefactory\", \n    type: TaskDependentTypeEnum.Dependent,\n    descriptions: [\n      \"需要将 form-next 接入验证\"\n    ]\n  },\n  \n  {\n    src: \"CustomizedForm\", \n    target: \"ECARules\",\n    type: TaskDependentTypeEnum.Dependent,\n    descriptions: [\n      \"需要支持规则推荐\",\n    ]\n  },\n  {\n    src: \"CustomizedForm\", \n    target: \"BillTypeRefactory\",\n    type: TaskDependentTypeEnum.Dependent,\n    descriptions: [\n      \"主要是为了重新梳理跟后端数据间的转换关系\"\n    ]\n  },\n  {\n    src: \"CustomizedForm\", \n    target: \"ReferRefactory\",\n    type: TaskDependentTypeEnum.Dependent,\n  },\n  {\n    src: \"CustomizedForm\", \n    target: \"MicroAppsRouterManager\",\n    type: TaskDependentTypeEnum.Dependent,\n  }\n\n]\n\nexport const customizedForms: ITaskPackages = {\n  tasks, dependencies\n}","import { ITask, TaskCategoryEnum, ITaskDependencies, ITaskPackages, TaskDependentTypeEnum } from '../declare';\n\nconst tasks: Array<ITask> = [\n  {\n    id: \"ECARules\",\n    name: \"ECARules\",\n    category: TaskCategoryEnum.Solution,\n    descriptions: [],\n  },\n  {\n    id: \"ECARulesAdminister\",\n    name: \"ECARules规则治理\",\n    category: TaskCategoryEnum.Task,\n    descriptions: [],\n  },\n  {\n    id: \"ECARulesAsync\",\n    name: \"ECARules支持异步\",\n    category: TaskCategoryEnum.Task,\n    descriptions: [],\n  },\n  {\n    id: \"ECARulesDesigner\",\n    name: \"ECARules设计器（用户端）\",\n    category: TaskCategoryEnum.Task,\n    descriptions: [],\n  },\n  \n]\n\nconst dependencies: Array<ITaskDependencies> = [\n  { \n    src: \"ECARules\", \n    target: \"ECARulesAdminister\",\n    type: TaskDependentTypeEnum.Dependent\n  },\n  { \n    src: \"ECARules\", \n    target: \"ECARulesAsync\",\n    type: TaskDependentTypeEnum.Dependent\n  },\n  { \n    src: \"ECARulesAsync\", \n    target: \"AsyncParadigms\",\n    type: TaskDependentTypeEnum.Dependent\n  },\n  { \n    src: \"ECARules\", \n    target: \"ECARulesDesigner\",\n    type: TaskDependentTypeEnum.Dependent\n  },\n]\n\nexport const ecaRules: ITaskPackages = {\n  tasks, dependencies\n}","import { ITask, TaskCategoryEnum, ITaskDependencies, ITaskPackages, TaskDependentTypeEnum } from '../declare';\n\nconst tasks: Array<ITask> = [\n  {\n    id: \"FormAtom\",\n    name: \"表单原子能力\",\n    category: TaskCategoryEnum.Solution,\n    descriptions: [],\n  },\n\n  {\n    id: \"FormBaseCodeExtract\",\n    name: \"表单跨端代码抽取\",\n    category: TaskCategoryEnum.Solution,\n    descriptions: [],\n  },\n  \n  {\n    id: \"FormEngineRefactory\",\n    name: \"表单引擎重构\",\n    category: TaskCategoryEnum.TechnicalSupport,\n    descriptions: [],\n  },\n\n  {\n    id: \"FormEngineDynamics\",\n    name: \"表单动态模型\",\n    category: TaskCategoryEnum.Task\n  },\n\n  {\n    id: \"FormEngineHooks\",\n    name: \"表单 hooks api\",\n    category: TaskCategoryEnum.Task\n  }\n]\n\nconst dependencies: Array<ITaskDependencies> = [\n  {\n    src: \"FormEngineRefactory\",\n    target: \"FormEngineHooks\",\n    type: TaskDependentTypeEnum.Dependent,\n  },\n  {\n    src: \"FormEngineRefactory\",\n    target: \"FormAtom\",\n    type: TaskDependentTypeEnum.Dependent,\n  },\n  {\n    src: \"FormEngineRefactory\",\n    target: \"FormEngineDynamics\",\n    type: TaskDependentTypeEnum.Dependent,\n  }\n]\n\nexport const forms: ITaskPackages = {\n  tasks, dependencies\n}","import { ITask, TaskCategoryEnum, ITaskDependencies, ITaskPackages, TaskDependentTypeEnum } from '../declare';\n\nconst tasks: Array<ITask> = [\n  {\n    id: \"MicroApps\",\n    name: \"微前端\",\n    category: TaskCategoryEnum.Goal,\n    descriptions: []\n  },\n  {\n    id: \"MicroAppsAdminister\",\n    name: \"微前端项目治理\",\n    category: TaskCategoryEnum.Solution,\n    descriptions: []\n  },\n  {\n    id: \"MicroAppsBaseTechnical\",\n    name: \"基座能力\",\n    category: TaskCategoryEnum.Task,\n    descriptions: []\n  },\n  {\n    id: \"MicroAppsSingleton\",\n    name: \"抽取全局单例对象\",\n    category: TaskCategoryEnum.Task,\n    descriptions: [\n      \"1.\"\n    ]\n  },\n  {\n    id: \"MicroAppsRouterManager\",\n    name: \"路由管理\",\n    category: TaskCategoryEnum.Task,\n    descriptions: [\n    \n    ]\n  },\n  {\n    id: \"WebpackModuleDederationVerify\",\n    name: \"webpack module federation 技术验证\",\n    category: TaskCategoryEnum.TechnicalSupport\n  }\n]\n\nconst dependencies: Array<ITaskDependencies> = [\n  {\n    src: \"MicroApps\",\n    target: \"MicroAppsBaseTechnical\",\n    type: TaskDependentTypeEnum.Dependent,\n    descriptions: []\n  },\n  {\n    src: \"MicroApps\",\n    target: \"MicroAppsAdminister\",\n    type: TaskDependentTypeEnum.Dependent,\n    descriptions: []\n  },\n  {\n    src: \"MicroAppsBaseTechnical\",\n    target: \"WebUnpack\",\n    type: TaskDependentTypeEnum.Related,\n    descriptions: []\n  },\n  {\n    src: \"MicroApps\",\n    target: \"WebpackModuleDederationVerify\",\n    type: TaskDependentTypeEnum.Dependent,\n    descriptions: []\n  },\n  {\n    src: \"MicroApps\",\n    target: \"MicroAppsSingleton\",\n    type: TaskDependentTypeEnum.Dependent,\n    descriptions: []\n  },\n  {\n    src: \"MicroApps\",\n    target: \"MicroAppsSingleton\",\n    type: TaskDependentTypeEnum.Dependent,\n    descriptions: []\n  }\n]\n\nexport const microApps: ITaskPackages = {\n  tasks, dependencies\n}","import { ITask, TaskCategoryEnum, ITaskDependencies, ITaskPackages, TaskDependentTypeEnum } from '../declare';\n\nconst tasks: Array<ITask> = [\n  {\n    id: \"MicroBFF\",\n    name: \"微BFF\",\n    category: TaskCategoryEnum.Goal,\n    descriptions: []\n  },\n  {\n    id: \"MicroBFFAdminister\",\n    name: \"BFF项目治理\",\n    category: TaskCategoryEnum.Solution,\n    descriptions: []\n  },\n  {\n    id: \"MicroBFFBaseTechnical\",\n    name: \"基础能力拆分\",\n    category: TaskCategoryEnum.Task,\n    descriptions: []\n  },\n  {\n    id: \"TrekServiceUnpack\",\n    name: \"现有Service抽取为子应用\",\n    category: TaskCategoryEnum.Task,\n    descriptions: []\n  }\n]\n\nconst dependencies: Array<ITaskDependencies> = [\n  {\n    src: \"MicroBFF\",\n    target: \"MicroBFFAdminister\",\n    type: TaskDependentTypeEnum.Dependent\n  },\n  {\n    src: \"MicroBFF\",\n    target: \"MicroBFFBaseTechnical\",\n    type: TaskDependentTypeEnum.Dependent\n  },\n  {\n    src: \"MicroBFF\",\n    target: \"TrekServiceUnpack\",\n    type: TaskDependentTypeEnum.Dependent\n  },\n]\n\nexport const microBFFs: ITaskPackages = {\n  tasks, dependencies\n}","import { ITask, TaskCategoryEnum, ITaskDependencies, ITaskPackages } from '../declare';\n\nconst tasks: Array<ITask> = [\n  {\n    id: \"QuerySolutionRefactory\",\n    name: \"查询方案重构\",\n    category: TaskCategoryEnum.Refactory,\n    descriptions: [],\n  },\n  {\n    id: \"DrillRefactory\",\n    name: \"穿透方案重构\",\n    category: TaskCategoryEnum.Refactory,\n    descriptions: [],\n  }\n]\n\nconst dependencies: Array<ITaskDependencies> = [\n  \n]\n\nexport const querySolutions: ITaskPackages = {\n  tasks, dependencies\n}","import { ITask, TaskCategoryEnum, ITaskDependencies, ITaskPackages } from '../declare';\n\nconst tasks: Array<ITask> = [\n  {\n    id: \"ReferRefactory\",\n    name: \"参照重构\",\n    category: TaskCategoryEnum.Refactory,\n    descriptions: [],\n  }\n]\n\nconst dependencies: Array<ITaskDependencies> = [\n  \n]\n\nexport const refers: ITaskPackages = {\n  tasks, dependencies\n}","import { ITask, TaskCategoryEnum, ITaskDependencies, ITaskPackages, TaskDependentTypeEnum } from '../declare';\n\nconst tasks: Array<ITask> = [\n  {\n    id: \"WebUnpack\",\n    name: \"前端拆包\",\n    category: TaskCategoryEnum.Action,\n    descriptions: []\n  }\n]\n\nconst dependencies: Array<ITaskDependencies> = [\n  {\n    src: \"WebUnpack\",\n    target: \"FormAtom\",\n    type: TaskDependentTypeEnum.Related\n  },\n  {\n    src: \"WebUnpack\",\n    target: \"ReferRefactory\",\n    type: TaskDependentTypeEnum.Related\n  },\n  {\n    src: \"WebUnpack\",\n    target: \"ECARulesAdminister\",\n    type: TaskDependentTypeEnum.Related\n  },\n  {\n    src: \"WebUnpack\",\n    target: \"QuerySolutionRefactory\",\n    type: TaskDependentTypeEnum.Related\n  },\n]\n\nexport const webUnpacks: ITaskPackages = {\n  tasks, dependencies\n}","import { ITask, TaskCategoryEnum, ITaskDependencies, ITaskPackages, TaskDependentTypeEnum } from '../declare';\n\nconst tasks: Array<ITask> = [\n  {\n    id: \"TrekUnpack\",\n    name: \"Trek拆包\",\n    category: TaskCategoryEnum.Action,\n    descriptions: []\n  },\n  \n]\n\nconst dependencies: Array<ITaskDependencies> = [\n  {\n    src: 'TrekUnpack',\n    target: 'MicroBFFAdminister',\n    type: TaskDependentTypeEnum.Related\n  },\n  {\n    src: 'TrekUnpack',\n    target: 'MicroBFFBaseTechnical',\n    type: TaskDependentTypeEnum.Related\n  },\n  {\n    src: 'TrekUnpack',\n    target: 'TrekServiceUnpack',\n    type: TaskDependentTypeEnum.Related\n  }\n]\n\nexport const trekUnpacks: ITaskPackages = {\n  tasks, dependencies\n}","export const categories = [\n  {\n    name: \"目标\",\n    symbolSize: 50,\n    itemStyle: {}\n  },\n  {\n    name: \"方案\",\n    symbolSize: 40\n  },\n  {\n    name: \"技术支撑\",\n    symbolSize: 30\n  },\n  {\n    name: \"重构\",\n    symbolSize: 40\n  },\n  {\n    name: \"动作\",\n    symbolSize: 20,\n    symbol: 'diamond',\n    // symbolRotate: 90,\n    itemStyle: {}\n  },\n  {\n    name: \"任务项\",\n    symbolSize: 20\n  }\n];","import { ITaskPackages, IEchartsGraphData, TaskDependentTypeEnum } from \"../declare\";\nimport { categories } from '../categories';\n\nfunction getEdgeSymbol(type: TaskDependentTypeEnum) {\n  if (type === TaskDependentTypeEnum.Related) {\n    return [\"none\", \"none\"];\n  }\n\n  return [\"arrow\", \"none\"]\n}\n\nfunction putIntoData(\n  data: IEchartsGraphData,\n  packages: ITaskPackages\n) {\n\n  const { tasks, dependencies } = packages;\n\n  tasks.forEach((task) => {\n    const { id, name, category } = task;\n\n    data.nodes.push({\n      id: id,\n      name: `${name}\\n（${id}）`,\n      category: category\n    });\n\n  });\n\n\n  dependencies.forEach((deps) => {\n    const { src, target, type, descriptions = [] } = deps;\n\n    const symbol = getEdgeSymbol(type);\n\n    data.links.push({\n      source: src,\n      target: target,\n      symbol: symbol\n    });\n\n    const key = `${src}-${target}`;\n    data.description[key] = descriptions.join('<br />');      \n\n  });\n\n  return data;\n}\n\nfunction makeCategoryMap(categories: Array<any>) {\n  return categories.reduce(\n    (arr, category) => ({ ...arr, [category.name]: category }),\n    {}\n  );\n}\n\nfunction cookForECharts(data: IEchartsGraphData): IEchartsGraphData {\n  const { nodes, links, categories, description } = data;\n\n  const categoryMap = makeCategoryMap(categories);\n\n  const styledNodes = nodes.map((node) => {\n    if (node.category && categoryMap[node.category]) {\n      const { name, ...styles } = categoryMap[node.category];\n      return {\n        ...node,\n        ...styles\n      };\n    }\n\n    return node;\n  });\n\n  return {\n    nodes: styledNodes,\n    links: links,\n    categories: categories,\n    description\n  };\n}\n\nfunction getEmptyData(): IEchartsGraphData {\n  return {\n    nodes: [],\n    links: [],\n    categories: categories,\n    description: {}\n  };\n}\n\nexport function MrForceRelation(...packages: Array<ITaskPackages>): IEchartsGraphData {\n  const data = packages.reduce((data, pack) => {\n    return putIntoData(data, pack)\n  }, getEmptyData());\n\n  return cookForECharts(data);\n}\n\n","import { ITaskPackages, IEchartsGraphData } from \"../declare\";\nimport { categories } from '../categories';\n\nfunction putIntoData(\n  data: IEchartsGraphData,\n  packages: ITaskPackages\n) {\n\n  const { tasks, dependencies } = packages;\n\n  tasks.forEach((task) => {\n    const { id, name, category } = task;\n\n    data.nodes.push({\n      id: id,\n      name: `${name}\\r\\n(${id})`,\n      category: category\n    });\n\n  });\n\n\n  dependencies.forEach((deps) => {\n    const { src, target, descriptions = [] } = deps;\n\n\n    // 桑基图是反过来的\n    data.links.push({\n      source: target,\n      target: src,\n      value: 1\n    });\n\n    const key = `${target}-${src}`;\n    data.description[key] = descriptions.join('<br />');      \n\n  });\n\n  return data;\n}\n\nfunction makeCategoryMap(categories: Array<any>) {\n  return categories.reduce(\n    (arr, category) => ({ ...arr, [category.name]: category }),\n    {}\n  );\n}\n\nfunction cookForECharts(data: IEchartsGraphData): IEchartsGraphData {\n  const { nodes, links, categories, description } = data;\n\n  const categoryMap = makeCategoryMap(categories);\n\n  const styledNodes = nodes.map((node) => {\n    if (node.category && categoryMap[node.category]) {\n      const { name, ...styles } = categoryMap[node.category];\n      return {\n        ...node,\n        ...styles\n      };\n    }\n\n    return node;\n  });\n\n  return {\n    nodes: styledNodes,\n    links: links,\n    categories: categories,\n    description\n  };\n}\n\nfunction getEmptyData(): IEchartsGraphData {\n  return {\n    nodes: [],\n    links: [],\n    categories: categories,\n    description: {}\n  };\n}\n\nexport function MrSankey(...packages: Array<ITaskPackages>): IEchartsGraphData {\n  const data = packages.reduce((data, pack) => {\n    return putIntoData(data, pack)\n  }, getEmptyData());\n\n  return cookForECharts(data);\n}\n\n","import { ITaskPackages } from '../declare';\n\nimport { MrCookEnum } from './declare';\nimport { MrForceRelation } from './mister-force-relation';\nimport { MrSankey } from './mister-sankey';\n\n\n\nexport function cook(type: MrCookEnum, ...packages: Array<ITaskPackages>) {\n  switch(type) {\n    case MrCookEnum.ForceRelation:\n      return MrForceRelation(...packages);\n\n    case MrCookEnum.Sankey:\n      return MrSankey(...packages);\n  }\n}","import { MrCookEnum } from './cooks/declare';\n\nimport { asyncParadigms } from './tasks/async-paramdigms';\nimport { billTypes } from \"./tasks/bill-types\";\nimport { customizedForms } from \"./tasks/customized-forms\";\nimport { ecaRules } from \"./tasks/eca-rules\";\nimport { forms } from \"./tasks/forms\";\nimport { microApps } from \"./tasks/micro-apps\";\nimport { microBFFs } from \"./tasks/micro-bffs\";\nimport { querySolutions } from \"./tasks/query-solutions\";\nimport { refers } from \"./tasks/refers\";\nimport { stocks } from \"./tasks/stocks\";\nimport { webUnpacks } from \"./tasks/web-unpacks\";\nimport { trekUnpacks } from \"./tasks/trek-unpacks\";\nimport { documentations } from \"./tasks/documentations\";\n\nimport { cook } from \"./cooks\";\nimport { ITaskPackages } from './declare';\n\nexport function loadData() {\n\n  return [\n    asyncParadigms,\n    billTypes,\n    customizedForms,\n    ecaRules,\n    forms,\n    microApps,\n    microBFFs,\n    querySolutions,\n    refers,\n    // stocks,\n    webUnpacks,\n    trekUnpacks,\n    documentations\n  ].reduce((packages, tasks) => {\n    packages.tasks = [...packages.tasks, ...tasks.tasks];\n    packages.dependencies = [...packages.dependencies, ...tasks.dependencies];\n    return packages;\n  }, { tasks: [], dependencies: []})\n\n  // return cook(\n  //   type,\n  //\n  //   asyncParadigms,\n  //   billTypes,\n  //   customizedForms,\n  //   ecaRules,\n  //   forms,\n  //   microApps,\n  //   microBFFs,\n  //   querySolutions,\n  //   refers,\n  //   // stocks,\n  //   webUnpacks,\n  //   trekUnpacks,\n  //   documentations\n  // );\n}\n\nexport function cookData(type: MrCookEnum, ...packages: Array<ITaskPackages>) {\n  return cook(type, ...packages)\n}","import {cookData} from \"../../data\";\nimport {MrCookEnum} from \"../../data/cooks/declare\";\nimport {ITaskPackages} from \"../../data/declare\";\n\n\nexport function useForceRelationOptions(packages: ITaskPackages) {\n  const forceRelation = cookData(MrCookEnum.ForceRelation, packages);\n\n  console.log('forceRelation', forceRelation);\n\n  return {\n\n    tooltip: {},\n    legend: [\n      {\n\n        orient: \"vertical\",\n        x: \"right\",\n        y: \"middle\",\n        top: \"0%\",\n        data: forceRelation.categories.map(function (a) {\n          return a.name;\n        })\n      }\n    ],\n    animation: false,\n    animationDuration: 1500,\n    animationEasingUpdate: \"quinticInOut\",\n\n    series: [\n      {\n        type: \"graph\",\n        layout: \"force\",\n        data: forceRelation.nodes,\n        links: forceRelation.links,\n        categories: forceRelation.categories,\n        // symbolSize: 50,\n        force: {\n          repulsion: 500,\n          gravity: 0.1,\n          layoutAnimation: false,\n          edgeLength: 100\n          // \"initLayout\": \"circular\"\n        },\n        animationDuration: 1500,\n        animationEasingUpdate: \"quinticInOut\",\n        roam: true,\n        symbolSize: 20,\n        focusNodeAdjacency: true,\n        // itemStyle: {\n        //   borderColor: \"#fff\",\n        //   borderWidth: 1,\n        //   // shadowBlur:4,\n        //   // shadowColor:'rgba(0, 0, 0, 0.2)',\n        //   color: \"#1c7231\",\n        //   backgroundColor: \"#edf6e8\"\n        // },\n\n        label: {\n          position: \"top\",\n          show: true\n          // formatter: '{b}'\n        },\n        lineStyle: {\n          color: \"#888\",\n          curveness: 0.3\n        },\n        emphasis: {\n          lineStyle: {\n            width: 10\n          }\n        },\n        tooltip: {\n          formatter: function (params: any) {\n            //连接线上提示文字格式化\n            const key = `${params.data.source}-${params.data.target}`;\n\n            return forceRelation.description[key];\n          }\n        }\n      }\n    ]\n  };\n}\n\nexport function useSankeyOptions(packages: ITaskPackages) {\n\n  const sankey = cookData(MrCookEnum.Sankey, packages);\n\n  return {\n    // title: {\n    //   text: \"企企四季度目标依赖关系\",\n    //   subtext: \"\",\n    //   top: \"top\",\n    //   left: \"left\"\n    // },\n    tooltip: {},\n    legend: [\n      {\n        // selectedMode: 'single',\n        orient: \"vertical\",\n        x: \"right\",\n        y: \"middle\",\n        top: \"0%\",\n        data: sankey.categories.map(function (a) {\n          return a.name;\n        })\n      }\n    ],\n    animation: false,\n    animationDuration: 1500,\n    animationEasingUpdate: \"quinticInOut\",\n\n    series: [\n      {\n        // xAxisIndex: 1,\n        // yAxisIndex: 0,\n        type: \"sankey\",\n        data: sankey.nodes,\n        links: sankey.links,\n        emphasis: {\n          focus: \"adjacency\"\n        },\n        label: {\n          position: \"top\",\n          show: true,\n          normal: {\n            formatter: (params: any) => {\n              return params.name;\n            }\n          }\n          // formatter: '{b}'\n        },\n        tooltip: {\n          formatter: function (params: any) {\n            //连接线上提示文字格式化\n            const key = `${params.data.source}-${params.data.target}`;\n\n            return sankey.description[key];\n          }\n        },\n        lineStyle: {\n          color: 'source',\n          curveness: 0.3\n        }\n      }\n    ]\n  };\n}\n\nexport function useChartOptions(type: MrCookEnum, packages: ITaskPackages) {\n  if(type === MrCookEnum.Sankey) {\n    return useSankeyOptions(packages);\n  }\n  return useForceRelationOptions(packages);\n}","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nimport {MrCookEnum} from \"../data/cooks/declare\";\nimport {ITask, ITaskDependencies} from \"../data/declare\";\nimport {useChartOptions} from \"./hooks/useChartOptions\";\n\nexport type GraphChartProps = {\n  tasks: Array<ITask>,\n  dependencies: Array<ITaskDependencies>\n}\n\nexport const GraphChart: React.FunctionComponent<GraphChartProps> = (props) => {\n    const options = useChartOptions(MrCookEnum.ForceRelation, props);\n    return (\n      <ReactEcharts option={options} className={'chart-item'}/>\n    )\n  }\n;\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nimport {MrCookEnum} from \"../data/cooks/declare\";\nimport {ITask, ITaskDependencies} from \"../data/declare\";\nimport {useChartOptions} from \"./hooks/useChartOptions\";\n\nexport type SankeyChartProps = {\n  tasks: Array<ITask>,\n  dependencies: Array<ITaskDependencies>\n}\n\nexport const SankeyChart: React.FunctionComponent<SankeyChartProps> = (props) => {\n  const options = useChartOptions(MrCookEnum.Sankey, props);\n  return (\n    <ReactEcharts option={options} className={'chart-item'}/>\n  );\n}\n\n","import React from \"react\";\nimport {Tab, TabList, TabPanel, Tabs} from \"react-tabs\";\nimport {GraphChart} from \"./GraphChart\";\nimport {SankeyChart} from \"./SankeyChart\";\nimport {ITask, ITaskDependencies} from \"../data/declare\";\n\nexport type ChartsProps = {\n  tasks: Array<ITask>,\n  dependencies: Array<ITaskDependencies>\n}\n\nexport const Charts: React.FunctionComponent<ChartsProps> = props => {\n  return (\n    <Tabs forceRenderTabPanel={true}>\n      <TabList>\n        <Tab>关系图</Tab>\n        <Tab>执行顺序图</Tab>\n      </TabList>\n      <TabPanel>\n        <GraphChart tasks={props.tasks} dependencies={props.dependencies}/>\n      </TabPanel>\n      <TabPanel>\n        <SankeyChart tasks={props.tasks} dependencies={props.dependencies}/>\n      </TabPanel>\n    </Tabs>\n  )\n}","import React, {useEffect, useState} from \"react\";\n\nimport {ITask, ITaskDependencies} from \"./data/declare\";\n\nimport {Header} from \"./components/Header\";\nimport {Tasks} from \"./components/Tasks\";\nimport {Charts} from \"./components/Charts\";\n\ninterface IStatement {\n  tasks: Array<ITask>;\n  tasksInChart: Array<ITask>;\n  dependencies: Array<ITaskDependencies>;\n  dependenciesInChart: Array<ITaskDependencies>;\n  actions: {\n    onTaskChanged(tasks: Array<ITask>): void;\n    onDependenciesChanged(dependencies: Array<ITaskDependencies>): void;\n  };\n}\n\nfunction useTasks() {\n  const [tasks, onTaskChanged] = useState<Array<ITask>>([]);\n  const [dependencies, onDependenciesChanged] = useState<Array<ITaskDependencies>>([]);\n\n  // useEffect(() => {\n  //   const data = loadData();\n  //   console.log('load data', data);\n  //   onTaskChanged(data.tasks);\n  //   onDependenciesChanged(data.dependencies);\n  //\n  // }, [])\n\n  return {\n    tasks, onTaskChanged,\n    dependencies, onDependenciesChanged\n  }\n}\n\nfunction useStatement(): IStatement {\n  const {tasks, onTaskChanged, dependencies, onDependenciesChanged} = useTasks();\n  const tasksInChart = tasks.filter(i => i.displayInCharts);\n  const dependenciesInChart = dependencies.filter(i => i.displayInCharts);\n\n  return {\n    tasks, tasksInChart,\n    dependencies, dependenciesInChart,\n    actions: {\n      onTaskChanged,\n      onDependenciesChanged\n    }\n  };\n}\n\nexport const App = () => {\n  const {tasks, tasksInChart, dependencies, dependenciesInChart, actions} = useStatement();\n  const {onTaskChanged, onDependenciesChanged} = actions;\n  console.log('app render', tasks);\n\n  return (\n    <>\n      <div className={\"app-container\"}>\n        <div className={\"header\"}>\n          <Header\n            tasks={tasks}\n            dependencies={dependencies}\n            onTaskChanged={onTaskChanged}\n            onDependenciesChanged={onDependenciesChanged}\n          />\n        </div>\n        <div className={\"app-content-container\"}>\n          <div className={\"graph-container\"}>\n            <Charts tasks={tasksInChart} dependencies={dependenciesInChart}/>\n          </div>\n          <div className={\"list-container\"}>\n            <Tasks\n              tasks={tasks}\n              dependencies={dependencies}\n              onTaskChanged={onTaskChanged}\n              onDependenciesChanged={onDependenciesChanged}/>\n          </div>\n        </div>\n      </div>\n\n    </>\n  );\n};\n","import { render } from \"react-dom\";\n\nimport { App } from \"./App\";\n\nimport \"react-tabs/style/react-tabs.css\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport \"antd/dist/antd.css\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}